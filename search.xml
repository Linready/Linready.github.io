<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>在这里，有我们从未喝过的酒</title>
      <link href="/Linready//blog/2020/01/20/%E5%9C%A8%E8%BF%99%E9%87%8C%EF%BC%8C%E6%9C%89%E6%88%91%E4%BB%AC%E4%BB%8E%E6%9C%AA%E5%96%9D%E8%BF%87%E7%9A%84%E9%85%92/"/>
      <url>/Linready//blog/2020/01/20/%E5%9C%A8%E8%BF%99%E9%87%8C%EF%BC%8C%E6%9C%89%E6%88%91%E4%BB%AC%E4%BB%8E%E6%9C%AA%E5%96%9D%E8%BF%87%E7%9A%84%E9%85%92/</url>
      
        <content type="html"><![CDATA[<div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=36570465&cid=74637743&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="positon: absolute; width: 100%; height: 100%; left: 0; top: 0;"> </iframe></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>大公司都是985、211吗？</title>
      <link href="/Linready//blog/2020/01/19/%E5%A4%A7%E5%85%AC%E5%8F%B8%E9%83%BD%E6%98%AF985%E3%80%81211%E5%90%97%EF%BC%9F/"/>
      <url>/Linready//blog/2020/01/19/%E5%A4%A7%E5%85%AC%E5%8F%B8%E9%83%BD%E6%98%AF985%E3%80%81211%E5%90%97%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<p>今天在知乎上看到这样一个问题：</p><h1 id="阿里，腾讯，华为等公司有专科生吗？"><a href="#阿里，腾讯，华为等公司有专科生吗？" class="headerlink" title="阿里，腾讯，华为等公司有专科生吗？"></a>阿里，腾讯，华为等公司有专科生吗？</h1><h1 id="大公司都是985，211吗？"><a href="#大公司都是985，211吗？" class="headerlink" title="大公司都是985，211吗？"></a>大公司都是985，211吗？</h1><hr><p>而这个问题下面点赞最多的回答是这样说的：</p><p>想起一句话：<br>“当你发现一个学历学校都远不如你的人，和你坐在一个办公室中，你最好不要先急着瞧不起他。”<br>“他要么，有传统教育体系无法衡量的才能，要么，有无需传统教育体系衡量的背景。”<br><strong>“但这任何一样可能都比你的一纸文凭值钱。”</strong></p><p>专科生只是一个帽子，这个帽子决定当别人第一眼看见你的时候，别人对你的评价。</p><p><strong>而至于你到底是一名专科生，还是一名本科生，还是一名研究生</strong><br><strong>得从你说的话，做的事，想的法，干的活来决定。</strong></p><p><strong>专科生中出现出类拔萃的人始终是少数，这是存在的现实。</strong><br><strong>大部分人，都会顶着这一项帽子，自暴自弃地说「这样优秀的人也只是少数」。</strong></p><p><strong>却可能从来没想过，这些少数的人，他们到底做了什么事，说了什么话，想了什么法，又干了什么活。</strong></p><hr><p>作者：叩丁狼教育<br>链接：<a href="https://www.zhihu.com/question/355175394/answer/914262663" target="_blank" rel="noopener">https://www.zhihu.com/question/355175394/answer/914262663</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> 杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows如何更改网络位置</title>
      <link href="/Linready//blog/2020/01/18/Windows%E5%A6%82%E4%BD%95%E6%9B%B4%E6%94%B9%E7%BD%91%E7%BB%9C%E4%BD%8D%E7%BD%AE/"/>
      <url>/Linready//blog/2020/01/18/Windows%E5%A6%82%E4%BD%95%E6%9B%B4%E6%94%B9%E7%BD%91%E7%BB%9C%E4%BD%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="方法一（以Windows7为例）"><a href="#方法一（以Windows7为例）" class="headerlink" title="方法一（以Windows7为例）"></a>方法一（以Windows7为例）</h1><p> 1.打开网络共享中心，可以右击左下角的网络连接标志<br> <img src="/Linready/blog/2020/01/18/Windows如何更改网络位置/1.png" alt><br> <img src="/Linready/blog/2020/01/18/Windows如何更改网络位置/1%EF%BC%882%EF%BC%89.png" alt><br> 2.进入网络与共享中心，找到中间的显示“公用网络”，点击。<br> <img src="/Linready/blog/2020/01/18/Windows如何更改网络位置/2.png" alt><br> 3.进入网络设置选择。分别为“家庭网络”、“工作网络“、”公用网络“。选择自己要的网络模式。<br> <img src="/Linready/blog/2020/01/18/Windows如何更改网络位置/3.png" alt><br> 4.电脑自动进行配置。<br> <img src="/Linready/blog/2020/01/18/Windows如何更改网络位置/4.png" alt><br> 5.配置完成后查看网络与共享中心，会显示配置好的网络方式。<br> <img src="/Linready/blog/2020/01/18/Windows如何更改网络位置/5.png" alt></p><hr><h1 id="方法二（以Windows8-1为例）"><a href="#方法二（以Windows8-1为例）" class="headerlink" title="方法二（以Windows8.1为例）"></a>方法二（以Windows8.1为例）</h1><p> 1.按Win + R 打开运行窗口，输入secpol.msc打开本地安全策略<br> <img src="/Linready/blog/2020/01/18/Windows如何更改网络位置/6.png" alt><br> 2.点击网络列表管理器策略<br> <img src="/Linready/blog/2020/01/18/Windows如何更改网络位置/7.png" alt><br> 3.双击你要修改的网络，点击网络位置选项卡<br> <img src="/Linready/blog/2020/01/18/Windows如何更改网络位置/8.png" alt><br> 4.选择自己要的网络模式，单击确定</p><h2 id><a href="#" class="headerlink" title=" "></a> <img src="/Linready/blog/2020/01/18/Windows如何更改网络位置/9.png" alt></h2>]]></content>
      
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows下安装JDK</title>
      <link href="/Linready//blog/2020/01/17/windows%E4%B8%8B%E5%AE%89%E8%A3%85JDK/"/>
      <url>/Linready//blog/2020/01/17/windows%E4%B8%8B%E5%AE%89%E8%A3%85JDK/</url>
      
        <content type="html"><![CDATA[<h1 id="一、JDK的下载-当前演示版本为jdk-1-8-0-171"><a href="#一、JDK的下载-当前演示版本为jdk-1-8-0-171" class="headerlink" title="一、JDK的下载(当前演示版本为jdk 1.8.0_171)"></a>一、JDK的下载(当前演示版本为jdk 1.8.0_171)</h1><p> 1.下载地址：<a href="https://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="noopener">https://www.oracle.com/technetwork/java/javase/downloads/index.html</a><br> 2.同意相关协议，再下载对应版本的jdk（windows x64）</p><h2 id><a href="#" class="headerlink" title=" "></a> <img src="/Linready/blog/2020/01/17/windows下安装JDK/1.png" alt></h2><h1 id="二、JDK的安装"><a href="#二、JDK的安装" class="headerlink" title="二、JDK的安装"></a>二、JDK的安装</h1><p> 1.双击安装<br> 2.下一步安装，在选择路径的时候要注意下（最好有条理，这样方便管理），例如：</p><pre><code>E:\software（自己专门用来放开发、学习软件的文件夹）\Java（对应相应软件）\jdk1.8.0_171（jdk版本）\![](2.png)</code></pre><p> 3.安装jre的文件路径也改下，改为  E:\software\Java\jre1.8.0_171\  ,最后安装目录如下所示（很清晰）：</p><h2 id="-1"><a href="#-1" class="headerlink" title=" "></a> <img src="/Linready/blog/2020/01/17/windows下安装JDK/3.png" alt></h2><h1 id="三、配置环境变量"><a href="#三、配置环境变量" class="headerlink" title="三、配置环境变量"></a>三、配置环境变量</h1><p> 1.我的电脑 –&gt; 右键属性  –&gt; 高级系统设置  –&gt; 环境变量<br> <img src="/Linready/blog/2020/01/17/windows下安装JDK/4.png" alt><br> 2.配置如下：<br>  (1) JAVA_HOME =E:\software\Java\jdk1.8.0_171（JDK的根目录）<br>  <img src="/Linready/blog/2020/01/17/windows下安装JDK/5.png" alt><br>  (2) CLASSPAT=.;%JAVA_HOME%\lib;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar<br>  <img src="/Linready/blog/2020/01/17/windows下安装JDK/6.png" alt><br>  (3) Path=%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin;<br>  （前两者是新建的，这个是在原有上添加，在最后添加时如果前面没有加分号，当前这条前要加分号）</p><h2 id="-2"><a href="#-2" class="headerlink" title="  "></a>  <img src="/Linready/blog/2020/01/17/windows下安装JDK/7.png" alt></h2><h1 id="四、检验JAVA是否安装成功"><a href="#四、检验JAVA是否安装成功" class="headerlink" title="四、检验JAVA是否安装成功"></a>四、检验JAVA是否安装成功</h1><p> 1.进入cmd中(Win + R  –&gt; 输入cmd – 回车) 或者 （右键开始 –&gt; 输入cmd – 回车）<br> <img src="/Linready/blog/2020/01/17/windows下安装JDK/8.png" alt><br> 2.输入java回车，如图所示<br> <img src="/Linready/blog/2020/01/17/windows下安装JDK/9.png" alt><br> 3.输入javac回车，如图所示</p><h2 id="-3"><a href="#-3" class="headerlink" title=" "></a> <img src="/Linready/blog/2020/01/17/windows下安装JDK/10.png" alt></h2><h1 id="如果以上都没错误，那就成功了，祝你java学习愉快！"><a href="#如果以上都没错误，那就成功了，祝你java学习愉快！" class="headerlink" title="如果以上都没错误，那就成功了，祝你java学习愉快！"></a><strong>如果以上都没错误，那就成功了，祝你java学习愉快！</strong></h1>]]></content>
      
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vim报错</title>
      <link href="/Linready//blog/2020/01/16/Vim%E6%8A%A5%E9%94%99/"/>
      <url>/Linready//blog/2020/01/16/Vim%E6%8A%A5%E9%94%99/</url>
      
        <content type="html"><![CDATA[<h2 id="在使用vim修改完一些配置文件时，当你退出时经常会出现’readonly’-option-is-set-add-to-override-的问题，通常有三种情况："><a href="#在使用vim修改完一些配置文件时，当你退出时经常会出现’readonly’-option-is-set-add-to-override-的问题，通常有三种情况：" class="headerlink" title="在使用vim修改完一些配置文件时，当你退出时经常会出现’readonly’ option is set (add ! to override)的问题，通常有三种情况："></a>在使用vim修改完一些配置文件时，当你退出时经常会出现’readonly’ option is set (add ! to override)的问题，通常有三种情况：</h2><p>1、 该错误为当前用户没有权限对文件作修改，这种情况可以强制退出:q!,先取得root权限后进行修改（root的权限取得命令是:su root然后输入你的登录密码即可）<br>2、该文件没有正确保存退出，正在打开状态，请别人关闭后再保存<br>3 、 若该文件所有人都关闭了，提示有的人没有关闭，则删除该文件的临时文件则可以正常打开、修改、保存；有文件未关闭的显示：<br>步骤：<br>1、按Esc</p><p>2、输入：set noreadonly</p><p>3、即可按正常途径保存:wq</p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/Linready//blog/2020/01/16/hello-world/"/>
      <url>/Linready//blog/2020/01/16/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Git 中文安装教程</title>
      <link href="/Linready//blog/2020/01/16/Git-%E4%B8%AD%E6%96%87%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
      <url>/Linready//blog/2020/01/16/Git-%E4%B8%AD%E6%96%87%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="Git-Setup-2-17-0"><a href="#Git-Setup-2-17-0" class="headerlink" title="Git Setup 2.17.0"></a>Git Setup 2.17.0</h1><h2 id="Git-中文安装教程"><a href="#Git-中文安装教程" class="headerlink" title="Git 中文安装教程"></a>Git 中文安装教程</h2><h3 id="Step-1-Information"><a href="#Step-1-Information" class="headerlink" title="Step 1 Information"></a>Step 1 Information</h3><p><strong>信息</strong></p><p><img src="/Linready/blog/2020/01/16/Git-中文安装教程/1.jpg" alt></p><p><em>Please read the following important information before continuing</em></p><p><strong><em>继续之前，请阅读以下重要信息</em></strong></p><h3 id="Step-2-Select-Destination-Location"><a href="#Step-2-Select-Destination-Location" class="headerlink" title="Step 2 Select Destination Location"></a>Step 2 Select Destination Location</h3><p><strong>选择安装位置</strong></p><p><img src="/Linready/blog/2020/01/16/Git-中文安装教程/2.jpg" alt></p><h3 id="Step-3-Select-Components"><a href="#Step-3-Select-Components" class="headerlink" title="Step 3 Select Components"></a>Step 3 Select Components</h3><p><strong>选择组件</strong></p><p><img src="/Linready/blog/2020/01/16/Git-中文安装教程/3.jpg" alt></p><p><strong>Additional icons</strong> 附加图标</p><p>​    <strong>On the Desktop</strong> 在桌面上</p><p><strong>Windows Explorer integration</strong>  Windows资源管理器集成<strong>==鼠标右键==</strong>菜单</p><p>​    <strong>Git Bash Here</strong></p><p>​    <strong>Git GUI Here</strong></p><p><strong>Git LFS (Large File Support)</strong> </p><p>大文件支持</p><p><strong>Associate .git* configuration files with the default text editor</strong> </p><p>将 .git 配置文件与默认文本编辑器相关联</p><p><strong>Associate .sh files to be run with Bash</strong>  </p><p>将.sh文件关联到Bash运行</p><p><strong>Use a TrueType font in all console windows</strong> </p><p>在所有控制台窗口中使用TrueType字体</p><p><strong>Check daily for Git for Windows updates</strong> </p><p>每天检查Git是否有Windows更新</p><h3 id="Step-4-Select-Strat-Menu-Folder"><a href="#Step-4-Select-Strat-Menu-Folder" class="headerlink" title="Step 4 Select Strat Menu Folder"></a>Step 4 Select Strat Menu Folder</h3><p><strong>创建开始菜单目录</strong></p><p><img src="/Linready/blog/2020/01/16/Git-中文安装教程/4.jpg" alt></p><h3 id="Step-5-Choosing-the-default-editor-used-by-Git"><a href="#Step-5-Choosing-the-default-editor-used-by-Git" class="headerlink" title="Step 5 Choosing the default editor used by Git"></a>Step 5 Choosing the default editor used by Git</h3><p><strong>选择Git使用的默认编辑器</strong></p><p><img src="/Linready/blog/2020/01/16/Git-中文安装教程/5.jpg" alt></p><p><strong>Use the Nano editor by default</strong></p><p>默认使用 Nano 编辑器</p><p><strong>Use Vim (The ubiquitous text editor) as Git’s default editor</strong></p><p>使用 Vim 作为 Git 的默认编辑器</p><p><strong>Use Notepad++ as Git’s default editor</strong></p><p>使用 Notepad++ 作为 Git 的默认编辑器</p><p><strong>Use Visual Studio Code as Git’s default editor</strong></p><p>使用 Visual Studio Code 作为 Git 的默认编辑器</p><h3 id="Step-6-Adjusting-your-PATH-environment"><a href="#Step-6-Adjusting-your-PATH-environment" class="headerlink" title="Step 6 Adjusting your PATH environment"></a>Step 6 Adjusting your PATH environment</h3><p><img src="/Linready/blog/2020/01/16/Git-中文安装教程/6.jpg" alt></p><p><strong>配置PATH环境</strong></p><p><strong>Use Git from Git Bash only</strong></p><p><em>This is the safest choice as your PATH will not be modified at all.You will only be able to use the Git command line tools form Git Bash.</em></p><p><strong><em>这是最安全的选择，因为您的PATH根本不会被修改。您只能使用 Git Bash 的 Git 命令行工具。</em></strong></p><p><strong>Use Git from the Windows Command Prompt</strong></p><p><em>This option is considered safe as it only adds some minimal Git wrappers to your PATH to avoid cluttering your environment with optional Unix tools . You will be able to use Git from both Git Bash and the Windows Command Prompt.</em></p><p><strong><em>这个选项被认为是安全的，因为它只向PATH添加一些最小的 Git包，以避免使用可选的Unix工具混淆环境。 您将能够从 Git Bash 和 Windows 命令提示符中使用 Git。</em></strong></p><p><strong>Use Git and optional Unix tools from the Windows Command Prompt</strong></p><p>从Windows命令提示符使用Git和可选的Unix工具</p><p><em>Both Git and the optional Unix tools will be added to you PATH</em></p><p><strong><em>Git和可选的Unix工具都将添加到您计算机的 PATH 中</em></strong></p><p><em>Warning:This will override Windows tools like “find and sort”.Only use this option if you understand the implications.</em></p><p><strong><em>警告：这将覆盖Windows工具，如 “ find 和 sort ”。只有在了解其含义后才使用此选项。</em></strong></p><h3 id="Step-7-Choosing-HTTPS-transport-backend"><a href="#Step-7-Choosing-HTTPS-transport-backend" class="headerlink" title="Step 7 Choosing HTTPS transport backend"></a>Step 7 Choosing HTTPS transport backend</h3><p><strong>选择HTTPS传输后端</strong></p><p><img src="/Linready/blog/2020/01/16/Git-中文安装教程/7.jpg" alt></p><p><strong>Use the OpenSSL library</strong></p><p>使用 OpenSSL 库</p><p><em>Server certificates will be validated using the ca-bundle.crt file.</em></p><p><strong><em>服务器证书将使用ca-bundle.crt文件进行验证。</em></strong></p><p><strong>Use the native Windows Secure Channel library</strong></p><p>使用本地 Windows 安全通道库</p><p><em>Server certificates will be validated using Windows Certificate Stores.This option also allows you to use your company’s internal Root CA certificates distributed e.g. via Active Directory Domain Services.</em></p><p><strong><em>服务器证书将使用Windows证书存储验证。此选项还允许您使用公司的内部根CA证书，例如， 通过Active Directory Domain Services 。</em></strong></p><h3 id="Step-8-Configuring-the-line-ending-conversions"><a href="#Step-8-Configuring-the-line-ending-conversions" class="headerlink" title="Step 8 Configuring the line ending conversions"></a>Step 8 Configuring the line ending conversions</h3><p><strong>配置行结束转换</strong></p><p><img src="/Linready/blog/2020/01/16/Git-中文安装教程/8.jpg" alt></p><p><strong>Checkout Windows-style,commit Unix-style line endings</strong></p><p><em>Git will convert LF to CRLF when checking out text files.When committing text files,CRLF will be converted to LF .For cross-pltform projects,this is the recommended setting on Windows (“core.autocrlf” is set to “true”)</em></p><p><strong><em>在检出文本文件时，Git会将LF转换为CRLF。当提交文本文件时，CRLF将转换为LF。 对于跨平台项目，这是Windows上推荐的设置（“core.autocrlf”设置为“true”）</em></strong></p><p><strong>Checkout as-is , commit Unix-style line endings</strong></p><p><em>Git will not perform any conversion when checking out text files. When committing text files, CRLF will be converted to LF. For cross-platform projects,this is the recommended setting on Unix (“core.autocrlf” is set to “input”)</em></p><p><strong><em>在检出文本文件时，Git不会执行任何转换。 提交文本文件时，CRLF将转换为LF。 对于跨平台项目，这是Unix上的推荐设置 （“core.autocrlf”设置为“input”）</em></strong></p><p><strong>Checkout as-is,commit as-is</strong></p><p><em>Git will not perform any conversions when checking out or committing text files.Choosing this option is not recommended for cross-platform projects (“core.autocrlf”is set to “false”)</em></p><p><strong><em>在检出或提交文本文件时，Git不会执行任何转换。对于跨平台项目，不推荐使用此选项（“core.autocrlf”设置为“false”）</em></strong></p><h3 id="Step-9-Configuring-the-terminal-emulator-to-use-with-Git-Bash"><a href="#Step-9-Configuring-the-terminal-emulator-to-use-with-Git-Bash" class="headerlink" title="Step 9 Configuring the terminal emulator to use with Git Bash"></a>Step 9 Configuring the terminal emulator to use with Git Bash</h3><p><strong>配置终端模拟器以与 Git Bash 一起使用</strong></p><p><img src="/Linready/blog/2020/01/16/Git-中文安装教程/9.jpg" alt></p><p><strong>Use MinTTY (the default terminal of MSYS2)</strong></p><p><em>Git Bash will use MinTTY as terminal emulator,which sports a resizable window,non-rectangular selections and a Unicode font. Windows console programs (such as interactive Python) must be launched via ‘winpty’ to work in MinTTY.</em></p><p><strong><em>Git Bash将使用MinTTY作为终端模拟器，该模拟器具有可调整大小的窗口，非矩形选区和Unicode字体。 Windows控制台程序（如交互式Python）必须通过’winpty’启动才能在MinTTY中运行。</em></strong></p><p><strong>Use Windows’ default console window</strong></p><p><em>Git will use the default console window of Windows (“cmd.exe”),which works well with Win32 console programs such as interactive Python or node.js , but has a very limited default scroll-back,needs to be configured to use aUnicode font in order to display non-ASCII characters correctly,and prior to Windows 10 its windows was not freely resizable and it only allowed rectangular text selections.</em></p><p><strong><em>Git将使用Windows的默认控制台窗口（“cmd.exe”），该窗口可以与Win32控制台程序（如交互式Python或node.js）一起使用，但默认的回滚非常有限，需要配置为使用unicode 字体以正确显示非ASCII字符，并且在Windows 10之前，其窗口不能自由调整大小，并且只允许矩形文本选择。</em></strong></p><h3 id="Step-10-Configuring-extra-options"><a href="#Step-10-Configuring-extra-options" class="headerlink" title="Step 10 Configuring extra options"></a>Step 10 Configuring extra options</h3><p><strong>配置额外的选项</strong></p><p><img src="/Linready/blog/2020/01/16/Git-中文安装教程/10.jpg" alt></p><p><strong>Enable file system caching</strong></p><p>启用文件系统缓存</p><p><em>File system data will be read in bulk and cached in memory for certain operations (“core.fscache” is set to “true”). This provides a significant performance boost.</em></p><p><strong><em>文件系统数据将被批量读取并缓存在内存中用于某些操作（“core.fscache”设置为“true”）。 这提供了显着的性能提升。</em></strong></p><p><strong>Enable Git Credential Manager</strong></p><p>启用Git凭证管理器</p><p><em>The Git Credential Manager for Windows provides secure Git credential storage for Windows,most notably multi-factor authentication support for Visual Studio Team Services and GitHub. (requires .NET framework v4.5.1 or or later).</em></p><p><strong><em>Windows的Git凭证管理器为Windows提供安全的Git凭证存储，最显着的是对Visual Studio Team Services和GitHub的多因素身份验证支持。 （需要.NET Framework v4.5.1或更高版本）。</em></strong></p><p><strong>Enable symbolic links</strong></p><p>启用符号链接</p><p><em>Enable symbolic links (requires the SeCreateSymbolicLink permission).Please note that existing repositories are unaffected by this setting.</em></p><p><strong><em>启用符号链接（需要SeCreateSymbolicLink权限）。请注意，现有存储库不受此设置的影响。</em></strong></p><h3 id="Step-11-Installing"><a href="#Step-11-Installing" class="headerlink" title="Step 11 Installing"></a>Step 11 Installing</h3><p><img src="/Linready/blog/2020/01/16/Git-中文安装教程/11.jpg" alt></p><h3 id="Step-12-Completing-the-Git-Setup-Wizard"><a href="#Step-12-Completing-the-Git-Setup-Wizard" class="headerlink" title="Step 12 Completing the Git Setup Wizard"></a>Step 12 Completing the Git Setup Wizard</h3><p><img src="/Linready/blog/2020/01/16/Git-中文安装教程/12.jpg" alt></p>]]></content>
      
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给大学生的笔记本电脑推荐</title>
      <link href="/Linready//blog/2019/07/30/Recommend/"/>
      <url>/Linready//blog/2019/07/30/Recommend/</url>
      
        <content type="html"><![CDATA[<p>本文的内容主要是罗列各类笔记本在各个价位下值得购买的一些机型，笔记本电脑相关知识的科普较少，目的是想让不想了解这方面知识的人用尽可能少的时间买到适合自己的笔记本电脑，对这方面知识感兴趣的朋友可以去看知乎上的一些科普文章，可以保证只要是通过推荐的购买渠道买到文章内推荐的笔记本就不会被坑，那么，如何使用本文买到适合自己的笔记本电脑呢？</p><h2 id="小白使用本文的方法："><a href="#小白使用本文的方法：" class="headerlink" title="小白使用本文的方法："></a>小白使用本文的方法：</h2><p>1.先不看笔记本的推荐，也就是下面内容预览的第4部分，把其他内容都浏览一遍，对笔记本各种类型的特点和购买渠道等等有一个大致的了解。</p><p>2.有一个大致的了解后，再根据自己专业需要用到的软件和要玩的游戏对电脑配置的要求，来确定将要购买的笔记本类型，是否需要上游戏本，还是买轻薄本或全能本就够了（一定要做完第一步），如果不知道软件和游戏对电脑配置的要求可以自行搜索。</p><p>3.在确定笔记本的类型后，翻到文章该类型笔记本电脑的推荐部分，再结合自己的预算，考虑是否要加预算买性能更强的或是屏幕更好的等等满足自己的需求，挑选出自己喜欢，适合自己的笔记本。</p><h2 id="由于文章较长，在这里做一个内容预览："><a href="#由于文章较长，在这里做一个内容预览：" class="headerlink" title="由于文章较长，在这里做一个内容预览："></a>由于文章较长，在这里做一个内容预览：</h2><p>1.关于各种小问题的解答，建议在买笔记本之前都看一遍</p><p>2.介绍了如何查看笔记本电脑价格波动的方法，一般情况下都能让你省一点钱</p><p>3.各种类型笔记本的特点</p><p>4.各种类型各个价位的笔记本电脑的推荐（主体部分）</p><p>5.向我进行咨询的链接</p><hr><h2 id="关于标题为什么叫“给大学生的笔记本电脑推荐”："><a href="#关于标题为什么叫“给大学生的笔记本电脑推荐”：" class="headerlink" title="关于标题为什么叫“给大学生的笔记本电脑推荐”："></a>关于标题为什么叫“给大学生的笔记本电脑推荐”：</h2><p>主要原因是我文章里推荐电脑的价格大部分是在1w以下的，因为我觉得大学生没有必要买那么贵的笔记本电脑，当然，土豪和专业人士除外。无论你是什么专业，1w以下价位的笔记本电脑已足够满足你大学四年的学习，如果你是一名游戏玩家，这个价位以下的游戏本也可以胜任市面上大多的主流游戏。</p><p>##关于笔记本电脑购买渠道：<br>在这里列出几个靠谱的渠道，可以自行比比价，看哪个渠道价格低就在哪买。</p><p><strong>1.京东的品牌自营店 2.京东和天猫上的品牌官方旗舰店 3.品牌官网 4.靠谱的海淘途径，</strong>其他的购买渠道本人不是很了解就不推荐了，<strong>切记不要在第三方店铺上买笔记本。</strong></p><p><strong>严禁电脑小白去实体店买</strong>，你可以在实体店体验机型，但是别在实体店买，当然如果你是大神的话，可以去实体店里战战奸商。</p><h2 id="关于各类学习软件的笔记本电脑选择："><a href="#关于各类学习软件的笔记本电脑选择：" class="headerlink" title="关于各类学习软件的笔记本电脑选择："></a>关于各类学习软件的笔记本电脑选择：</h2><p><strong>专业需要用到视频剪辑、CAD建模、AI、仿真等类软件的在游戏本或高性能全能本中选购，</strong>要用PS等修图类软件的尽量选择屏幕素质强的。</p><h2 id="关于笔记本电脑的屏幕素质："><a href="#关于笔记本电脑的屏幕素质：" class="headerlink" title="关于笔记本电脑的屏幕素质："></a>关于笔记本电脑的屏幕素质：</h2><p><strong>文章中屏幕素质差（屏幕色域低于72%NTSC）的笔记本电脑我会在劣势中写明，劣势中无说明的则默认屏幕色域在72%NTSC以上。</strong></p><p><strong>（文章中推荐的笔记本以下要求基本达标）</strong>如果不是超高刷新率的电竞屏，就尽量选择IPS材质的屏；笔记本屏幕尺寸在14寸以下的，尽量选择72%NTSC(或100%sRGB)色域以上的，大屏的也要保证有45%以上的NTSC色域；屏幕分辨率现在的主流是1920*1080，以下的就不要考虑了；亮度也很重要，亮度太低了在强光下根本无法使用，现在大部分IPS屏幕亮度在300nit左右，尽量不要选300nit以下的。</p><h2 id="关于i5和i7："><a href="#关于i5和i7：" class="headerlink" title="关于i5和i7："></a>关于i5和i7：</h2><p><strong>除去i5和i7版本售价十分接近和CPU是标压的情况，轻薄本和全能本都不推荐上i7，</strong>因为低压i7相对于i5性能提升较小（约10%），而为了10%的性能往往多花1k块，性价比低；<strong>游戏本中的高性能游戏本预算充足时可以考虑购买i7版本，</strong>在入门级游戏本中，i5和i7对电脑性能的影响几乎一样，因为存在CPU性能过剩，当显卡在GTX1060以上时，CPU的性能才会对电脑的整体性能造成影响。此外，由于i7的核心数和线程更多，可以更好地处理多核任务（比如渲染，建模等），<strong>有这方面需求的同学也可以考虑选购i7标压的笔记本电脑。</strong></p><h2 id="关于相似价格、配置的笔记本电脑哪个好（指文章中推荐的电脑）："><a href="#关于相似价格、配置的笔记本电脑哪个好（指文章中推荐的电脑）：" class="headerlink" title="关于相似价格、配置的笔记本电脑哪个好（指文章中推荐的电脑）："></a>关于相似价格、配置的笔记本电脑哪个好（指文章中推荐的电脑）：</h2><p>这个问题没有明确的答案，因为笔记本之间小的差别很多，可以参考一下我文章列出电脑的优劣势，看你自己更需要什么。在笔记本的价格和配置相同时，可以从笔记本的屏幕的大小和素质、外观、机身材质、轻薄程度、接口数量、固态硬盘的容量和读取速度、散热性能、键盘键程这些方面来比对，如果官方没有这些信息，可以去视频网站上找笔记本的实机评测看看。</p><h2 id="关于笔记本电脑的使用寿命："><a href="#关于笔记本电脑的使用寿命：" class="headerlink" title="关于笔记本电脑的使用寿命："></a>关于笔记本电脑的使用寿命：</h2><p>一般笔记本电脑的使用寿命都在3-5年（不包括意外情况），没有说价格贵的笔记本使用寿命就长一些，价格贵的笔记本只是在使用期间用户体验好一些，如果在笔记本在保修期发生了意外情况，品牌售后可以帮你解决问题，过了保修期就只能自行想办法解决了。</p><p>如果你的电脑很幸运的在购买5年之后还能使用，那时候电脑的主流配置也已经远远超过你5年前购买的电脑了，你还是会选择换电脑。</p><h2 id="关于笔记本电脑的品牌："><a href="#关于笔记本电脑的品牌：" class="headerlink" title="关于笔记本电脑的品牌："></a>关于笔记本电脑的品牌：</h2><p>文章中所有推荐的笔记本电脑都与品牌无关，做推荐只关注产品，不关注品牌，品牌仅仅与售后有关（下面介绍了），这里引用一句很经典的话“单以品牌讨论产品的行为都是耍流氓“。</p><h2 id="关于笔记本电脑的售后服务："><a href="#关于笔记本电脑的售后服务：" class="headerlink" title="关于笔记本电脑的售后服务："></a>关于笔记本电脑的售后服务：</h2><p>通过正规的渠道购买笔记本电脑后，品牌官方都会默认送1-3年的保修服务，想知道自己购买的笔记本有几年官方保修问客服就好。</p><p>目前售后服务网点分布最广的三个品牌：联想、戴尔、惠普。在你遇到硬件故障时可以很方便快捷地找到这些服务网点，大幅降低维修所耗时间，所以纯小白用户最好选择这三家的产品。其他的二线品牌像机械革命、神舟、小米、华为、炫龙等的售后服务网点没有一线品牌分布广泛，这也是它们的电脑性价比高的原因，如果考虑购买二线品牌的产品，在问了客服品牌的售后服务网点在当地的分布后，如果很少或几乎没有，可以考虑京东的售后服务，虽然也是外包给第三方的，但起码坏了有地方可以去修。</p><h2 id="关于电商平台上的对电脑的评论："><a href="#关于电商平台上的对电脑的评论：" class="headerlink" title="关于电商平台上的对电脑的评论："></a>关于电商平台上的对电脑的评论：</h2><p>无参考价值，不用看。</p><hr><h1 id="以下是正文："><a href="#以下是正文：" class="headerlink" title="以下是正文："></a>以下是正文：</h1><h2 id="在做笔记本的推荐之前之前我们先来了解下笔记本的基本类型："><a href="#在做笔记本的推荐之前之前我们先来了解下笔记本的基本类型：" class="headerlink" title="在做笔记本的推荐之前之前我们先来了解下笔记本的基本类型："></a>在做笔记本的推荐之前之前我们先来了解下笔记本的基本类型：</h2><p><strong>1.游戏本：</strong>在同价位里配置和性能要优于其他两种类型笔记本，其缺点是大部分游戏本都较厚较重，如果想要一台既轻薄性能又好的游戏本需要增加大量预算（1w以上）。</p><p><strong>2.超薄本：</strong>优点是比较轻，便携性好，适合经常要拿着笔记本到处走的人群，适合追剧，使用一些办公软件，续航时间相对较长，可以运行一些不吃配置的游戏（CF,LOL等）。</p><p><strong>3.全能本：</strong>既轻薄又有一定的游戏性能（可以运行一些优化较好的游戏），但厚度重量比不上超薄本，性能也没有游戏本高（挺鸡肋的），对配置要求较高的游戏只能开低画质运行，如果你是一名偶尔玩玩游戏，不全是为了玩游戏而买电脑，游戏也只是随便玩，并且对游戏体验不是很在意的同学可以选择全能本。</p><h2 id="下面开始笔记本的推荐："><a href="#下面开始笔记本的推荐：" class="headerlink" title="下面开始笔记本的推荐："></a>下面开始笔记本的推荐：</h2><p><strong>注意：优势劣势看个人喜好，如果觉得有些劣势影响不是很大可以选择性忽略。</strong></p><p><strong>文章内推荐的笔记本电脑没有大坑，可以随意选购。</strong></p><p><strong>文章内的笔记本电脑价格从低到高依次排列，售价仅供参考，京东会时不时的给笔记本促销降价，以下售价均为京东上笔记本的日常售价，推荐的配置一般是截图里的。</strong></p><h1 id="1-全能本："><a href="#1-全能本：" class="headerlink" title="1.全能本："></a>1.全能本：</h1><p>机械革命 S1 独显版<br><img src="/Linready/blog/2019/07/30/Recommend/MECHREVO_s1.jpg" alt="机械革命 S1"><br>售价：3999<br>优势：价格低，散热好，比较轻便<br>劣势：做工一般，触控板尺寸小</p><p>机械革命 S1 Pro</p><p>售价：3999<br>优势：价格低，独显+i5+512G固态性价比很高，散热和拓展性好<br>劣势：屏幕素质差，单通道内存</p><p>小米 RedmiBook 14</p><p>售价：3999<br>优势：价格低，做工不错<br>劣势：屏幕素质差，无Type-C接口</p><p>神舟 精盾U65A畅玩版</p><p>售价：4099<br>优势：价格低，GTX显卡在这个价位罕见<br>劣势：屏幕素质差</p><p>小米 Pro 2019款</p><p>售价：4968<br>优势：拓展性好，散热较好（可选512G SSD）<br>劣势：机身略重，风扇噪音较大</p><p>惠普 战66 二代 高色域屏版（可选15.6寸屏）</p><p>售价：5699<br>优势：接口丰富，拓展性好<br>劣势：较重，高负载时键盘表面温度较高且风扇声较尖锐</p><p>荣耀MagicBook Pro</p><p>售价：5499<br>优势：16.1寸高素质大屏，散热、做工和性能释放较好<br>劣势：硬盘位不支持自行升级，无数字小键盘</p><p>联想 小新Air15 2019</p><p>售价：5699<br>优势：1T固态硬盘，续航不错<br>劣势：方向键尺寸小</p><p>戴尔 燃7000 Pro</p><p>售价：5699<br>优势：拓展性好<br>劣势：散热一般</p><p>华为 Matebook14 独显版</p><p>售价：5999<br>优势：屏幕素质强，升级了接口种类和硬盘容<br>劣势：接口处的处理较粗糙，键盘表面高温区域面积较大</p><p>小米 Pro 2019款（i7 16G内存版）</p><p>售价：6599<br>优势：拓展性好，散热较好，16G运行内存<br>劣势：低压i7性价比较低，机身略重，风扇噪音较大</p><p>联想 小新Air13 高定版</p><p>售价：6599<br>优势：16G运行内存<br>劣势：低压i7性价比较低，性能释放较差</p><p>戴尔 XPS15-9570</p><p>售价：6999<br>优势：性能强，标压CPU，散热不错<br>劣势：续航一般，键盘下方容易沾染油脂</p><p>戴尔 XPS15-7590</p><p>售价：8999<br>优势：性能强，标压CPU，提升了续航<br>劣势：键盘下方容易沾染油脂</p><p>联想 ThinkPad T490</p><p>售价：9999<br>优势：2k分辨率，键盘手感好<br>劣势：散热一般，键盘高温区域偏右侧</p><h2 id="高性能全能本（性能相当于入门级游戏本）："><a href="#高性能全能本（性能相当于入门级游戏本）：" class="headerlink" title="高性能全能本（性能相当于入门级游戏本）："></a>高性能全能本（性能相当于入门级游戏本）：</h2><p>戴尔 灵越7591</p><p>售价：6799<br>优势：拓展性好，性价比相较于7590更高<br>劣势：散热一般，相较于7590更重一些</p><p>戴尔 灵越7590</p><p>售价：7899<br>优势：续航强，拓展性好，可选4k屏<br>劣势：散热和性能释放较差</p><h1 id="2-超薄本："><a href="#2-超薄本：" class="headerlink" title="2.超薄本："></a>2.超薄本：</h1><p>惠普 星14 青春版</p><p>售价：3999<br>优势：价格低，温度控制好<br>劣势：屏幕素质差，机身较厚</p><p>机械革命 S1 独显版</p><p>售价：3999<br>优势：散热好，价格低<br>劣势：做工一般，触控板尺寸小</p><p>戴尔灵越14 燃 集显版</p><p>售价：3999<br>优势：做工较好<br>劣势：屏幕素质差，机身较重</p><p>联想 小新14 锐龙版R5</p><p>售价：3899<br>优势：价格低，拓展性和散热好<br>劣势：屏幕素质差</p><p>惠普 战66 AMD升级版</p><p>售价：3999<br>优势：价格低，接口丰富，拓展性好<br>劣势：屏幕素质差，风扇声音较大，固态方面对比上下两款较弱</p><p>荣耀 MagicBook 2019锐龙版</p><p>售价：3999<br>优势：价格低，做工不错，512G固态，有指纹识别功能<br>劣势：屏幕素质差</p><p>惠普 星13-an</p><p>售价：4266<br>优势：颜值高，噪音控制好<br>劣势：续航一般</p><p>华硕 adol 14（仅售价在截图价格左右时推荐购买）</p><p>售价：4298<br>优势：续航强，做工和性能释放好<br>劣势：屏幕素质差，方向键尺寸小，固态硬盘性能弱</p><p>华为 Matebook13 i3集显版</p><p>售价：4399<br>优势：屏幕素质强<br>劣势：只有Type-C接口需转接，i3性能较差</p><p>联想 小新Air13 集显版</p><p>售价：4699<br>优势：做工好，散热不错<br>劣势：购买渠道少（天猫联想官方旗舰店有货）</p><p>戴尔 成就5000</p><p>售价：4799<br>优势：续航不错，售后支持一年意外保护<br>劣势：风扇声音较大</p><p>华为 Matebook13 i5集显版</p><p>售价：5399<br>优势：屏幕素质强<br>劣势：只有Type-C接口需转接，键盘表面高温区域面积较大</p><p>联想 Miix520</p><p>售价：5499<br>优势：二合一平板电脑，键盘手感不错<br>劣势：屏幕边框较宽</p><p>联想 720S 13 锐龙版</p><p>售价：5599<br>优势：做工和屏幕素质好<br>劣势：性能释放较差，方向键尺寸小</p><p>华为 Matebook14 集显版</p><p>售价：5699<br>优势：屏幕素质强，升级了接口种类和硬盘容量<br>劣势：键盘表面高温区域面积较大</p><p>惠普 EnvyX360 13</p><p>售价：5799<br>优势：翻转触控屏笔记本，性价比高<br>劣势：表面高温区域面积大</p>]]></content>
      
      
      
        <tags>
            
            <tag> 博客，推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>好想，累的时候抱抱你</title>
      <link href="/Linready//blog/2019/07/29/a/"/>
      <url>/Linready//blog/2019/07/29/a/</url>
      
        <content type="html"><![CDATA[<p>语言的力量有时候很苍白，<br>千言万语也比不上一个拥抱让人心安。<br>再坚强的人，内心也会脆弱柔软，<br>伤心的时候，也想要一个肩膀陪伴，<br>疲惫的时候，也想找一个怀抱依赖。<br>累的时候，不需要有多浪漫，<br>只要一个真心的拥抱就很温暖。</p><p>生活不会总是充满激情，<br>曾经的轰轰烈烈总会化为平淡。<br>那些遥远的山盟海誓地久天长，<br>终究不如一个简单的拥抱值得期待。<br>人生艰难，前路或许并不平坦，<br>总想找一个人，一起对抗黑暗，<br>一起把生活的风雨都承担。<br>无论面对多大的困难，<br>都紧紧握着彼此的手，<br>给对方一个拥抱，<br>共同走向幸福的彼岸。</p><p>好想，累的时候抱抱你，</p><p>不需要说多余的话，<br>不需要为其他的事心烦，<br>只是静静地靠在你的胸口，<br>闻着你的味道，<br>听着你的心跳，<br>依偎着彼此取暖，<br>那是属于我的安全感，<br>是最无与伦比的浪漫。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 博客，文章 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
